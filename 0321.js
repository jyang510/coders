https://programmers.co.kr/learn/courses/30/lessons/68645

// 삼각형 3변의 길이 중 마지막 숫자의 값은 3(n - 1)임
// 그 이후엔 n - 3으로 삼각형을 또 만들겠지. 그 때는 마지막 숫자의 값 + 3(n - 4)일 것이다
// 즉 3(n -1)까지 반복하게 하고. 한 사이클당 n값을 3씩(변이 3개) 줄여나가는 코드를 짜면 될 거 같다 (n이 1일 경우엔 (3(n-1)이 아니라 마지막숫자 + 1을 리턴하게 하면 될 듯) 
// 하다보니 이게 아니고, 반복문을 3개 적어서 따로따로 넣어주는 식으로 하는 게 맞겠더라
// 결국 인덱스를 3가지의 다른 조건으로 설정하는 거라서.. 어쩔 수 없는 거 같다

// 이차원 배열을 만들어서, 그 배열을 돌면서 넣어줘야곘다는 건 생각했는데, for문을 통해 이중 배열로 만들까 하다가 고차함수를 쓰려고 했더니 갑자기 잘 모르겠더라
// 일단 배열을 리턴을 해야하니까 map일거고, 근데 요소도 배열이니까 map 안에서 리턴하는 값도 배열인데, 인덱스만큼 길이가 있는 거..
// 정리하다보니까 알겠다 ㅎㅎ

    // let answer = new Array(n).map((a, index) => {
    //     return new Array(index + 1);
    // })

// 이렇게 했더니, 이차원 배열이 안 나오길래 왜 그런가 했더니, 각 요소가 비어있으니까
// 제대로 안 되는 것 같더라. 원 배열에 뭔 값이라도 넣어줘야 하는 것 같음;;

function solution(n) {
    let answer = new Array(n).fill().map((a, index) => {
        return new Array(index + 1);
    })
    // row, height 값을 반복문 전에 미리 적어줘야함
    let r = -1, h = 0, count = 0;
    for (let i = n; i > 0; i - 3) {
    // 배열에 넣는 방식이 3가지가 있어서 반복문을 3번 적어야한다
        for (let j = 0; j < i; j++) {
            answer[++r][h] = ++count;
        }
        for (let j = 0; j < i - 1; j++) {
            answer[r][++h] = ++count;
        }
        for (let j = 0; j < i - 2; j++) {
            answer[--r][--h] = ++count;
        }
    }
    return answer;
}

// 이렇게 코드를 만들었는데 물론 아직 이차원 배열이라 정답은 아니지만, 그냥 오류가 뜨더라. 진짜 왜지...?
// 오류로는 Cannot set property '1' of undefined라며

// solution.js:27
// answer[++r][h] = ++count;

// 이쪽이 문제라고 알려줬는데 잘 이해가 안 간다.. 뭐가 문젠지 진짜 모르겟네
// 결국 다 못 풀었다. 이따가 OT 끝나고 다른 분들 코드를 좀 봐야할 것 같음
